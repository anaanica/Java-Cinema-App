/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra;

import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.intellijthemes.FlatArcDarkOrangeIJTheme;
import com.formdev.flatlaf.intellijthemes.FlatGradiantoDarkFuchsiaIJTheme;
import com.formdev.flatlaf.intellijthemes.FlatGradiantoMidnightBlueIJTheme;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatAtomOneDarkIJTheme;
import hr.algebra.model.User;
import hr.algebra.utilities.MessageUtils;
import hr.algebra.view.AddMoviesPanel;
import hr.algebra.view.EditDirectorsPanel;
import hr.algebra.view.EditMoviesPanel;
import hr.algebra.view.UploadMoviesPanel;
import java.util.Arrays;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

/**
 *
 * @author ana
 */
public class MovieManager extends javax.swing.JFrame {

    private static final String ADMIN = "Upload movies";
    private static final String USER_ADD_MOVIES = "Add movies";
    private static final String USER_EDIT_MOVIES = "Edit and archive movies";
    private static final String USER_EDIT_DIRECTORS = "Edit directors";

    private User user;

    /**
     * Creates new form MovieManager
     */
    public MovieManager(Optional<User> user) {
        initComponents();
        configurePanels(user);
        if (user.isPresent()) {
            this.user = user.get();
        }
        handleLookAndFeel();
    }

    private MovieManager() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpContent = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        miExit = new javax.swing.JMenuItem();
        menuUser = new javax.swing.JMenu();
        miUser = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miLogout = new javax.swing.JMenuItem();
        menuView = new javax.swing.JMenu();
        menuLookAndFeel = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuFile.setMnemonic('F');
        menuFile.setText("File");

        miExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        menuFile.add(miExit);

        jMenuBar1.add(menuFile);

        menuUser.setMnemonic('U');
        menuUser.setText("User");

        miUser.setText("User data");
        miUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miUserActionPerformed(evt);
            }
        });
        menuUser.add(miUser);
        menuUser.add(jSeparator1);

        miLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miLogout.setText("Log out");
        miLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogoutActionPerformed(evt);
            }
        });
        menuUser.add(miLogout);

        jMenuBar1.add(menuUser);

        menuView.setMnemonic('V');
        menuView.setText("View");

        menuLookAndFeel.setMnemonic('L');
        menuLookAndFeel.setText("Look and feel");
        menuView.add(menuLookAndFeel);

        jMenuBar1.add(menuView);

        menuHelp.setMnemonic('H');
        menuHelp.setText("Help");

        miAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miAbout.setText("About");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        menuHelp.add(miAbout);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tpContent, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tpContent, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miUserActionPerformed
        MessageUtils.showInformationMessage("User Data", user.toString());
    }//GEN-LAST:event_miUserActionPerformed

    private void miLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogoutActionPerformed
        logout();
    }//GEN-LAST:event_miLogoutActionPerformed

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        MessageUtils.showInformationMessage("About", "Java 1");
    }//GEN-LAST:event_miAboutActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        logout();
    }//GEN-LAST:event_miExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatDarculaLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuLookAndFeel;
    private javax.swing.JMenu menuUser;
    private javax.swing.JMenu menuView;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JMenuItem miUser;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void configurePanels(Optional<User> user) {
        switch (user.get().getRoleID()) {
            case 1:
                tpContent.add(ADMIN, new UploadMoviesPanel());
                break;
            case 2:
                tpContent.add(USER_EDIT_MOVIES, new EditMoviesPanel());
                tpContent.add(USER_ADD_MOVIES, new AddMoviesPanel());
                tpContent.add(USER_EDIT_DIRECTORS, new EditDirectorsPanel());
                break;
        }
    }

    private void logout() {

        if (MessageUtils.showConfirmDialog("Logout", "Log out?")) {
            this.dispose();
            Login login = new Login();
            login.setVisible(true);
        }
    }

    private void handleLookAndFeel() {
        ButtonGroup bgLookFeel = new ButtonGroup();

        LookAndFeelInfo[] lookAndFeels = {
            new LookAndFeelInfo("FlatDarculaLaf", FlatDarculaLaf.class.getName()),
            new LookAndFeelInfo("FlatLightLaf", FlatLightLaf.class.getName()),
            new LookAndFeelInfo("FlatDarkLaf", FlatDarkLaf.class.getName()),
            new LookAndFeelInfo("FlatIntelliJLaf", FlatIntelliJLaf.class.getName()),
            new LookAndFeelInfo("FlatGradiantoDarkFuchsiaIJTheme", FlatGradiantoDarkFuchsiaIJTheme.class.getName()),
            new LookAndFeelInfo("FlatGradiantoMidnightBlueIJTheme", FlatGradiantoMidnightBlueIJTheme.class.getName()),
            new LookAndFeelInfo("FlatArcDarkOrangeIJTheme", FlatArcDarkOrangeIJTheme.class.getName()),
            new LookAndFeelInfo("FlatAtomOneDarkIJTheme", FlatAtomOneDarkIJTheme.class.getName()),};

        Arrays.asList(lookAndFeels).forEach(lf -> {
            JRadioButtonMenuItem mi = new JRadioButtonMenuItem(lf.getName());
            bgLookFeel.add(mi);
            menuLookAndFeel.add(mi);
            if (lf.getClassName().equals(UIManager.getLookAndFeel().getClass().getName())) {
                mi.setSelected(true);
            }
            mi.addActionListener(e -> {
                try {
                    UIManager.setLookAndFeel(lf.getClassName());
                    SwingUtilities.updateComponentTreeUI(MovieManager.this);
                } catch (Exception ex) {
                    Logger.getLogger(MovieManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            });
        });
    }
}
